--JOIN
--CARTESIAN PRODUCT 카티션 곱, 상호조인
-- CROSS JOIN은 모든 경우에 대한 매칭을 보여준다.
SELECT * FROM EMP A CROSS JOIN DEPT B;

-- INNER JOIN
SELECT E.EMPNO, E.ENAME, E.JOB, D.DNAME FROM EMP E INNER JOIN DEPT D ON E.DEPTNO=D.DEPTNO WHERE E.JOB='CLERK';

SELECT E.EMPNO, E.ENAME, E.JOB, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO
AND E.JOB='CLERK';


--FULL OUTER JOIN
SELECT E.*,D.*
FROM EMP E
FULL OUTER JOIN DEPT D
ON E.DEPTNO=D.DEPTNO
ORDER BY EMPNO DESC;

--LEFT OUTER JOIN
SELECT E.*, D.*
FROM EMP E
LEFT OUTER JOIN DEPT D
ON E.DEPTNO=D.DEPTNO
WHERE NOT D.DEPTNO IS NULL;

--LEFT OUTER JOIN (+)
SELECT E.*, D.*
FROM EMP E,DEPT D
WHERE E.DEPTNO=D.DEPTNO(+);

--RIGHT OUTER JOIN
SELECT E.*, D.*
FROM EMP E RIGHT OUTER JOIN DEPT D
ON E.DEPTNO=D.DEPTNO;

--SELF JOIN 계층 구조를 만들기 위해서 사용
SELECT A.EMPNO, A.ENAME, A.JOB, A.MGR
        ,D.DEPTNO,D.DNAME
        ,B.EMPNO,B.ENAME,B.JOB
FROM EMP A, EMP B, DEPT D
WHERE A.DEPTNO=D.DEPTNO
AND A.MGR=B.EMPNO(+);

SELECT A.EMPNO, A.ENAME, A.JOB, A.MGR
        ,B.EMPNO,B.ENAME,B.JOB
FROM EMP A, EMP B
WHERE A.MGR=B.EMPNO;

/*SUB QUERY 서브쿼리
    SELECT /FROM /WHERE 에 사용할 수 있음.
*/
--SELECT SCALASUB QUERY
--결과가 반드시 단일 행 단일값이여야 함.
SELECT E.ENAME,
    (SELECT D.DNAME FROM DEPT D WHERE D.DEPTNO=E.DEPTNO) AS DEPTNAME
FROM EMP E
WHERE E. JOB='MANAGER';
--FROM INLINE VIEW
SELECT EMP_NAME, SALARY
FROM(SELECT E.ENAME AS EMP_NAME
    ,E.SAL AS SALARY
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO
    AND D.DNAME='SALES')
WHERE SALARY BETWEEN 1000 AND 2000;

SELECT E.ENAME AS EMP_NAME
    ,E.SAL AS SALARY
    FROM EMP E, DEPT D
    WHERE E.DEPTNO=D.DEPTNO
    AND D.DNAME='SALES';
-- WHERE 행과 무관하게 단일 컬럼으로 리턴
SELECT * FROM DEPT D
WHERE D.DEPTNO IN(SELECT E.DEPTNO FROM EMP E WHERE E.SAL>1000);

SELECT ENAME,SAL FROM EMP
WHERE SAL>(SELECT AVG(SAL) FROM EMP);

-- ALL 전부가 만족
SELECT ENAME,SAL FROM EMP
WHERE SAL>ALL(SELECT SAL FROM EMP WHERE DEPTNO=30);

-- ANY 하나라도 만족
SELECT ENAME, SAL FROM EMP
WHERE SAL>ANY(SELECT SAL FROM EMP WHERE DEPTNO=30);

-- EXISTS 존재여부 체크
SELECT D.DNAME FROM DEPT D
WHERE EXISTS(SELECT E.ENAME FROM EMP E WHERE E.DEPTNO=D.DEPTNO AND E.SAL>3000);

SELECT D.DNAME FROM DEPT D
WHERE NOT EXISTS(SELECT E.ENAME FROM EMP E WHERE E.DEPTNO=D.DEPTNO AND E.SAL>3000);


--Q1 부서코드 부서이름 사원번호 사원명 봉급
--사원의 봉급이 2000초과인 사원만
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.SAL
FROM DEPT D, EMP E
WHERE D.DEPTNO=E.DEPTNO AND E.SAL>2000;

--Q2 부서별
--부서코드 부서명 급여평균 최대급여 최소급여 부서인원수
SELECT D.DEPTNO, D.DNAME, TRUNC(AVG(E.SAL)), MAX(E.SAL), MIN(E.SAL), COUNT(*)
FROM DEPT D, EMP E
WHERE D.DEPTNO=E.DEPTNO
GROUP BY D.DEPTNO, D.DNAME;